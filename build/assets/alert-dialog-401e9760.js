import{j as o}from"./app-064981ae.js";import{r as s}from"./vendor-a2d89f66.js";import{c as z,a as G}from"./index-cf3e3df0.js";import{u,a as n,d as A}from"./button-f23978c8.js";import{c as D,T as H,O as W,W as k,C as B,a as V,D as Y,b as v,R as q,P as J}from"./index-a94daeb3.js";var K=Symbol("radix.slottable");function Q(a){const e=({children:t})=>o.jsx(o.Fragment,{children:t});return e.displayName=`${a}.Slottable`,e.__radixId=K,e}var x="AlertDialog",[U,Re]=z(x,[D]),i=D(),N=a=>{const{__scopeAlertDialog:e,...t}=a,r=i(e);return o.jsx(q,{...r,...t,modal:!0})};N.displayName=x;var X="AlertDialogTrigger",Z=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(H,{...l,...r,ref:e})});Z.displayName=X;var ee="AlertDialogPortal",y=a=>{const{__scopeAlertDialog:e,...t}=a,r=i(e);return o.jsx(J,{...r,...t})};y.displayName=ee;var ae="AlertDialogOverlay",R=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(W,{...l,...r,ref:e})});R.displayName=ae;var c="AlertDialogContent",[te,oe]=U(c),re=Q("AlertDialogContent"),_=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,children:r,...l}=a,g=i(t),p=s.useRef(null),L=u(e,p),m=s.useRef(null);return o.jsx(k,{contentName:c,titleName:b,docsSlug:"alert-dialog",children:o.jsx(te,{scope:t,cancelRef:m,children:o.jsxs(B,{role:"alertdialog",...g,...l,ref:L,onOpenAutoFocus:G(l.onOpenAutoFocus,d=>{var f;d.preventDefault(),(f=m.current)==null||f.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(re,{children:r}),o.jsx(le,{contentRef:p})]})})})});_.displayName=c;var b="AlertDialogTitle",j=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(V,{...l,...r,ref:e})});j.displayName=b;var E="AlertDialogDescription",S=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(Y,{...l,...r,ref:e})});S.displayName=E;var se="AlertDialogAction",C=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(v,{...l,...r,ref:e})});C.displayName=se;var h="AlertDialogCancel",w=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,{cancelRef:l}=oe(h,t),g=i(t),p=u(e,l);return o.jsx(v,{...g,...r,ref:p})});w.displayName=h;var le=({contentRef:a})=>{const e=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${E}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=a.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(e)},[e,a]),null},ie=N,ne=y,T=R,P=_,O=C,$=w,I=j,M=S;const _e=ie,ce=ne,F=s.forwardRef(({className:a,...e},t)=>o.jsx(T,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",a),...e,ref:t}));F.displayName=T.displayName;const de=s.forwardRef(({className:a,...e},t)=>o.jsxs(ce,{children:[o.jsx(F,{}),o.jsx(P,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",a),...e})]}));de.displayName=P.displayName;const pe=({className:a,...e})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",a),...e});pe.displayName="AlertDialogHeader";const ge=({className:a,...e})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",a),...e});ge.displayName="AlertDialogFooter";const me=s.forwardRef(({className:a,...e},t)=>o.jsx(I,{ref:t,className:n("text-lg font-semibold",a),...e}));me.displayName=I.displayName;const fe=s.forwardRef(({className:a,...e},t)=>o.jsx(M,{ref:t,className:n("text-sm text-muted-foreground",a),...e}));fe.displayName=M.displayName;const ue=s.forwardRef(({className:a,...e},t)=>o.jsx(O,{ref:t,className:n(A(),a),...e}));ue.displayName=O.displayName;const Ae=s.forwardRef(({className:a,...e},t)=>o.jsx($,{ref:t,className:n(A({variant:"outline"}),"mt-2 sm:mt-0",a),...e}));Ae.displayName=$.displayName;export{_e as A,de as a,pe as b,me as c,ge as d,ue as e};
