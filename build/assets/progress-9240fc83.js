import{j as n}from"./app-8e6b5599.js";import{r as u}from"./vendor-a2d89f66.js";import{c as y}from"./index-5318cce7.js";import{b as E,a as c}from"./button-51c1de47.js";var I=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","select","span","svg","ul"],x=I.reduce((r,e)=>{const i=E(`Primitive.${e}`),o=u.forwardRef((a,d)=>{const{asChild:p,...t}=a,s=p?i:e;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),n.jsx(s,{...t,ref:d})});return o.displayName=`Primitive.${e}`,{...r,[e]:o}},{}),m="Progress",v=100,[R,G]=y(m),[S,j]=R(m),P=u.forwardRef((r,e)=>{const{__scopeProgress:i,value:o=null,max:a,getValueLabel:d=_,...p}=r;(a||a===0)&&!f(a)&&console.error(C(`${a}`,"Progress"));const t=f(a)?a:v;o!==null&&!g(o,t)&&console.error(M(`${o}`,"Progress"));const s=g(o,t)?o:null,w=l(s)?d(s,t):void 0;return n.jsx(S,{scope:i,value:s,max:t,children:n.jsx(x.div,{"aria-valuemax":t,"aria-valuemin":0,"aria-valuenow":l(s)?s:void 0,"aria-valuetext":w,role:"progressbar","data-state":h(s,t),"data-value":s??void 0,"data-max":t,...p,ref:e})})});P.displayName=m;var N="ProgressIndicator",b=u.forwardRef((r,e)=>{const{__scopeProgress:i,...o}=r,a=j(N,i);return n.jsx(x.div,{"data-state":h(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:e})});b.displayName=N;function _(r,e){return`${Math.round(r/e*100)}%`}function h(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function l(r){return typeof r=="number"}function f(r){return l(r)&&!isNaN(r)&&r>0}function g(r,e){return l(r)&&!isNaN(r)&&r<=e&&r>=0}function C(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${v}\`.`}function M(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${v} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var $=P,V=b;const A=u.forwardRef(({className:r,value:e,indicatorColor:i,...o},a)=>n.jsx($,{ref:a,className:c("relative h-4 w-full overflow-hidden rounded-full bg-secondary",r),...o,children:n.jsx(V,{className:c("h-full w-full flex-1 transition-all",i||"bg-primary"),style:{transform:`translateX(-${100-(e||0)}%)`}})}));A.displayName=$.displayName;export{A as P};
